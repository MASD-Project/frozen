{
  "documentation": "Assorted utilities used by Dogen.\n",
  "tagged_values": {
    "masd.codec.dia.comment": "true",
    "masd.codec.model_modules": "dogen.utility",
    "masd.codec.input_technical_space": "cpp",
    "masd.codec.reference": "cpp.builtins",
    "masd.codec.reference": "cpp.std",
    "masd.codec.reference": "cpp.boost",
    "masd.codec.reference": "masd",
    "masd.codec.reference": "masd.variability",
    "masd.codec.reference": "dogen.profiles",
    "masd.variability.profile": "dogen.profiles.base.default_profile"
  },
  "elements": [
    {
      "name": "exception",
      "fallback_element_type": "masd::module"
    },
    {
      "name": "exception::invalid_enum_value",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "exception::utility_exception",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "filesystem",
      "fallback_element_type": "masd::module"
    },
    {
      "name": "filesystem::file",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "filesystem::file_not_found",
      "documentation": "File was not found.\n",
      "stereotypes": [
        "masd::exception"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "filesystem::io_error",
      "documentation": "An error occurred whilst performing an IO operation.\n",
      "stereotypes": [
        "masd::exception"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "filesystem::path",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "hash",
      "fallback_element_type": "masd::module"
    },
    {
      "name": "hash::combine",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "hash::list_hash",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "io",
      "fallback_element_type": "masd::module"
    },
    {
      "name": "io::array_io",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "io::forward_list_io",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "io::jsonify_io",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "io::list_io",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "io::map_io",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "io::memory_io",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "io::optional_io",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "io::pair_io",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "io::set_io",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "io::shared_ptr_io",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "io::typeindex_io",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "io::unordered_map_io",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "io::unordered_set_io",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "io::vector_io",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "log",
      "fallback_element_type": "masd::module"
    },
    {
      "name": "log::logger",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "log::lifecycle_manager",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "log::scoped_lifecycle_manager",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "log::severity_level",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "serialization",
      "fallback_element_type": "masd::module"
    },
    {
      "name": "serialization::archive_types",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "serialization::xml_helper",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "serialization::path",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "string",
      "fallback_element_type": "masd::module"
    },
    {
      "name": "string::splitter",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test",
      "fallback_element_type": "masd::module"
    },
    {
      "name": "test::asserter",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test::bytewise_file_asserter",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test::file_asserter",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test::logging",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test::xml_serialization_helper",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test::exception_checkers",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test::fixture",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test::macros",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test_data",
      "fallback_element_type": "masd::module"
    },
    {
      "name": "test_data::filesystem_tests",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test_data::generate_container",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test_data::generator",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test_data::northwind",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test_data::resolver",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test_data::sequence",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test_data::tds_test_good",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test_data::test_data",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test_data::validating_resolver",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test_data::xml_reader",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "xml",
      "fallback_element_type": "masd::module"
    },
    {
      "name": "xml::exception",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "xml::node_types",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "xml::node_types_io",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "xml::text_reader",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "xml::text_reader_io",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "log::logging_configuration",
      "documentation": "Options related to logging.\n",
      "stereotypes": [
        "masd::fluent"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "severity",
          "type": "std::string",
          "documentation": "Level at which to log.\n"
        },
        {
          "name": "filename",
          "type": "std::string",
          "documentation": "Name of the file to log into.\n\nIf empty, file logging is disabled.\n"
        },
        {
          "name": "output_to_console",
          "type": "bool",
          "documentation": "If true, dumps the log into the console.\n"
        },
        {
          "name": "output_directory",
          "type": "boost::filesystem::path",
          "documentation": "Directory in which to place the output.\n"
        }
      ]
    },
    {
      "name": "log::invalid_logging_configuration",
      "documentation": "The values supplied for the logging configuration are not valid.\n",
      "stereotypes": [
        "masd::exception"
      ],
      "tagged_values": {
        "masd.cpp.types.class_forward_declarations.enabled": "false"
      },
      "fallback_element_type": "masd::object"
    },
    {
      "name": "log::logging_configuration_validator",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test_data::dogen_product",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test_data::cpp_ref_impl_product",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test_data::csharp_ref_impl_product",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "test_data::test_data_exception",
      "documentation": "An error occurred whilst obtaining the test data.\n",
      "stereotypes": [
        "masd::exception"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "environment",
      "fallback_element_type": "masd::module"
    },
    {
      "name": "environment::environment_exception",
      "documentation": "There was an error reading an environment variable.\n",
      "stereotypes": [
        "masd::exception"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "environment::variable_reader",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "formatters",
      "documentation": "Contains all of the formatting primitives\nthat are not associated with any particular\nmodel.\n",
      "tagged_values": {
        "masd.codec.dia.comment": "true"
      },
      "fallback_element_type": "masd::module"
    },
    {
      "name": "formatters::formatting_error",
      "documentation": "An error has occurred while formatting.\n",
      "stereotypes": [
        "masd::exception"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "formatters::quote_type",
      "documentation": "Types of quotes that can be used in streaming.\n",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "single_quote",
          "type": ""
        },
        {
          "name": "double_quote",
          "type": ""
        }
      ]
    },
    {
      "name": "formatters::spacing_type",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "no_space",
          "type": ""
        },
        {
          "name": "left_space",
          "type": ""
        },
        {
          "name": "right_space",
          "type": ""
        },
        {
          "name": "left_and_right_space",
          "type": ""
        }
      ]
    },
    {
      "name": "formatters::utility_formatter",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "string::differ",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "hash::sha1_hasher",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "main",
      "stereotypes": [
        "masd::entry_point",
        "dogen::untypable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "CMakeLists",
      "stereotypes": [
        "masd::build::cmakelists",
        "dogen::handcrafted::cmake"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "formatters::indent_filter",
      "stereotypes": [
        "dogen::handcrafted::typeable::header_only"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "formatters::comment_style",
      "documentation": "Supported styles of comments.\n",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "c_style",
          "type": "",
          "documentation": "Original C programming language style.\n"
        },
        {
          "name": "cpp_style",
          "type": "",
          "documentation": "One line, C++ style.\n"
        },
        {
          "name": "csharp_style",
          "type": "",
          "documentation": "C# programming language style.\n"
        },
        {
          "name": "shell_style",
          "type": "",
          "documentation": "UNIX shell scripting comments.\n"
        },
        {
          "name": "sql_style",
          "type": "",
          "documentation": "Comments start with a double-dash.\n"
        },
        {
          "name": "xml_style",
          "type": "",
          "documentation": "Comments using XML syntax.\n"
        }
      ]
    },
    {
      "name": "formatters::comment_formatter",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "formatters::sequence_formatter",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "formatters::infix_configuration",
      "documentation": "Configuration to use for a given infix in sequence formatter.\n",
      "stereotypes": [
        "masd::fluent"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "first",
          "type": "std::string",
          "documentation": "Applicable only to the first element of a sequence, if the sequence has more\nthan one element.\n"
        },
        {
          "name": "not_first",
          "type": "std::string",
          "documentation": "Applicable to all elements other than the first.\n"
        },
        {
          "name": "not_last",
          "type": "std::string",
          "documentation": "Applicable to all elements other than the last.\n"
        },
        {
          "name": "last",
          "type": "std::string",
          "documentation": "Only applicable to the last element of a sequence.\n"
        }
      ]
    }
  ]
}
