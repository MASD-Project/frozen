{
  "documentation": "Provides support for encoding and decoding of external models.\n\nAn external model is defined as:\n\n@li a third-party format that is not owned or controlled by\n    Dogen, such as Dia or org-mode.\n@li a Dogen format designed for interoperability (JSON).\n\nExternal models are converted into an intermediate format called\nthe @e codec model, because it is the original entry point into\nthe dogen processing pipeline. It also reflects the notion that we\nare injecting external technical spaces into the MASD technical\ntechnical space.\n\nA @e codec must be created for each external model that is to be\ninjected, providing a transformation between the native formats\nand the codec model. The codecs are created as transforms in the\npresent model, and should reuse common infrastructure where possible.\nThere should also be a \"native\" model representing the original\ncodec format as much as possible (e.g. \"dogen.dia\"). The idea for\nthose models is just to provide a faithful representation of the\nnative codec domain model (though it may not necessarily be\ncomplete).\n\nIn general, codecs use file extensions to determine the type of the\ncodec.\n",
  "tagged_values": {
    "masd.codec.dia.comment": "true",
    "masd.codec.model_modules": "dogen.codec",
    "masd.codec.input_technical_space": "cpp",
    "masd.codec.reference": "cpp.builtins",
    "masd.codec.reference": "cpp.std",
    "masd.codec.reference": "cpp.boost",
    "masd.codec.reference": "dogen.variability",
    "masd.codec.reference": "dogen.tracing",
    "masd.codec.reference": "masd",
    "masd.codec.reference": "masd.variability",
    "masd.codec.reference": "dogen.profiles",
    "masd.codec.reference": "dogen.physical",
    "masd.codec.reference": "dogen.identification",
    "masd.variability.profile": "dogen.profiles.base.default_profile"
  },
  "elements": [
    {
      "name": "transforms",
      "fallback_element_type": "masd::module"
    },
    {
      "name": "transforms::model_production_chain",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::model_to_model_chain",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "entities",
      "documentation": "Object model that is codec-agnostic but aims to provide\na representation of the core entities needed by all codecs.\n\nNot all codecs will make use of all entities.\n",
      "tagged_values": {
        "masd.codec.dia.comment": "true"
      },
      "fallback_element_type": "masd::module"
    },
    {
      "name": "entities::model",
      "documentation": "Represents an external model.\n",
      "stereotypes": [
        "Element"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "elements",
          "type": "std::list<element>"
        },
        {
          "name": "input_technical_space",
          "type": "std::string",
          "documentation": "Technical space to which the model belongs, within the codec space.\n"
        },
        {
          "name": "references",
          "type": "std::list<std::string>"
        },
        {
          "name": "processed_variability_overrides",
          "type": "std::unordered_set<std::string>",
          "documentation": "All the variability overrides that were processed by this model.\n"
        }
      ]
    },
    {
      "name": "entities::element",
      "documentation": "Represents an element from an external model.\n",
      "stereotypes": [
        "Element"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "parents",
          "type": "std::list<std::string>"
        },
        {
          "name": "attributes",
          "type": "std::list<attribute>"
        },
        {
          "name": "fallback_element_type",
          "type": "std::string",
          "documentation": "Stereotype conveying element type, to be used when none is provided with the\nmain stereotypes.\n"
        },
        {
          "name": "can_be_primitive_underlier",
          "type": "bool"
        },
        {
          "name": "in_global_module",
          "type": "bool"
        },
        {
          "name": "can_be_enumeration_underlier",
          "type": "bool"
        },
        {
          "name": "is_default_enumeration_type",
          "type": "bool"
        },
        {
          "name": "is_associative_container",
          "type": "bool"
        },
        {
          "name": "is_floating_point",
          "type": "bool"
        },
        {
          "name": "containing_element_id",
          "type": "identification::entities::codec_id",
          "documentation": "ID of the containing element, if any.\n"
        }
      ]
    },
    {
      "name": "entities::attribute",
      "stereotypes": [
        "Element"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "type",
          "type": "std::string"
        },
        {
          "name": "value",
          "type": "std::string",
          "documentation": "Default value for this attribute, if any.\n"
        }
      ]
    },
    {
      "name": "transforms::context",
      "stereotypes": [
        "dogen::typeable",
        "dogen::pretty_printable"
      ],
      "tagged_values": {
        "masd.cpp.types.class_forward_declarations.enabled": "true"
      },
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "data_directories",
          "type": "std::vector<boost::filesystem::path>"
        },
        {
          "name": "feature_model",
          "type": "boost::shared_ptr<variability::entities::feature_model>"
        },
        {
          "name": "tracer",
          "type": "boost::shared_ptr<tracing::tracer>"
        },
        {
          "name": "compatibility_mode",
          "type": "bool"
        },
        {
          "name": "variability_overrides",
          "type": "std::vector<std::string>",
          "documentation": "Raw set of variability overrides.\n"
        }
      ]
    },
    {
      "name": "transforms::transformation_error",
      "stereotypes": [
        "masd::exception"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "entities::model_set",
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "target",
          "type": "model"
        },
        {
          "name": "references",
          "type": "std::list<model>"
        },
        {
          "name": "reference_graph_data",
          "type": "reference_graph_data",
          "documentation": "Stores the data required to build a graph of references for a model set.\n"
        }
      ]
    },
    {
      "name": "helpers",
      "fallback_element_type": "masd::module"
    },
    {
      "name": "helpers::references_resolver",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::model_set_production_chain",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::input_technical_space_transform",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::references_transform",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "helpers::reference_resolution_exception",
      "stereotypes": [
        "masd::exception"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "entities::Taggable",
      "documentation": "Ability to contain tagged values.\n",
      "stereotypes": [
        "masd::object_template"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "tagged_values",
          "type": "std::list<identification::entities::tagged_value>"
        }
      ]
    },
    {
      "name": "entities::Stereotypable",
      "documentation": "Ability to have stereotypes.\n",
      "stereotypes": [
        "masd::object_template"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "stereotypes",
          "type": "std::list<identification::entities::stereotype>"
        }
      ]
    },
    {
      "name": "entities::Documentable",
      "documentation": "Ability to provide documentation.\n",
      "stereotypes": [
        "masd::object_template"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "documentation",
          "type": "std::string",
          "documentation": "Code comments.\n\nThese are expected to follow the grammar of the comment processing tools\nof the technical space in question, e.g. Doxygen for C++, JavaDoc for Java, etc.\n"
        }
      ]
    },
    {
      "name": "entities::Nameable",
      "documentation": "Ability to have a name.\n",
      "stereotypes": [
        "masd::object_template"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "name",
          "type": "identification::entities::name",
          "documentation": "Name of the codec element.\n"
        }
      ]
    },
    {
      "name": "entities::Configurable",
      "documentation": "Ability to have meta-data associated.\n",
      "stereotypes": [
        "masd::object_template"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "configuration",
          "type": "boost::shared_ptr<variability::entities::configuration>",
          "documentation": "Configuration for this element.\n"
        }
      ]
    },
    {
      "name": "entities::DeterminableOrigin",
      "documentation": "Properties related to the origin of the modeling element.\n",
      "stereotypes": [
        "masd::object_template"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "provenance",
          "type": "identification::entities::codec_provenance",
          "documentation": "Provenance details of this codec element.\n"
        }
      ]
    },
    {
      "name": "entities::TaggableOverridable",
      "documentation": "Ability to contain tagged values.\n",
      "stereotypes": [
        "masd::object_template"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "tagged_values_overrides",
          "type": "std::list<identification::entities::tagged_value>",
          "documentation": "Meta-data sourced externally that can be used to override meta-data in model.\n"
        }
      ]
    },
    {
      "name": "entities::Commentable",
      "documentation": "Has the ability to have an associated comment.\n",
      "stereotypes": [
        "masd::object_template"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "comment",
          "type": "comment",
          "documentation": "Properties associated with the codec comment.\n"
        }
      ]
    },
    {
      "name": "entities::Element",
      "parents": [
        "entities::Taggable",
        "entities::Stereotypable",
        "entities::Documentable",
        "entities::Nameable",
        "entities::Configurable",
        "entities::DeterminableOrigin",
        "entities::TaggableOverridable",
        "entities::Commentable"
      ],
      "documentation": "Consolidates a number of related object templates.\n",
      "stereotypes": [
        "masd::object_template"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::configuration_transform",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "features",
      "documentation": "Defines all of the features and feature groups used by\nthe codec model.\n",
      "tagged_values": {
        "masd.codec.dia.comment": "true"
      },
      "fallback_element_type": "masd::module"
    },
    {
      "name": "features::input_technical_space",
      "documentation": "Feature bundle for the input technical space.\n",
      "stereotypes": [
        "masd::variability::feature_bundle"
      ],
      "tagged_values": {
        "masd.variability.default_binding_point": "global",
        "masd.variability.key_prefix": "masd.codec"
      },
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "input_technical_space",
          "type": "masd::variability::text",
          "value": "\"agnostic\"",
          "documentation": "Input technical space for this model.\n"
        }
      ]
    },
    {
      "name": "features::reference",
      "documentation": "Features related to model referencing.\n",
      "stereotypes": [
        "masd::variability::feature_bundle"
      ],
      "tagged_values": {
        "masd.variability.default_binding_point": "global",
        "masd.variability.key_prefix": "masd.codec"
      },
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "reference",
          "type": "masd::variability::text_collection",
          "documentation": "Imports an external model.\n",
          "tagged_values": {
            "masd.variability.is_optional": "true"
          }
        }
      ]
    },
    {
      "name": "features::initializer",
      "stereotypes": [
        "masd::variability::initializer"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "features::uml",
      "documentation": "Features related to all UML injectors.\n",
      "stereotypes": [
        "masd::variability::feature_bundle"
      ],
      "tagged_values": {
        "masd.variability.default_binding_point": "any",
        "masd.variability.generate_static_configuration": "false",
        "masd.variability.key_prefix": "masd.codec"
      },
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "dia.comment",
          "type": "masd::variability::boolean",
          "documentation": "If true, the UML comment is linked to the containing package.\n\nIf the containing package is the model itself, it is linked to the model's module.\n"
        }
      ]
    },
    {
      "name": "helpers::references_validator",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "helpers::reference_validation_error",
      "documentation": "A cycle was detected in the references graph.\n",
      "stereotypes": [
        "masd::exception"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "entities::reference_graph_data",
      "documentation": "Contains all the data required to build the graph of references.\n",
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "root",
          "type": "std::string",
          "documentation": "Has the name of the target model, which is the entry point to the references\ngraph.\n"
        },
        {
          "name": "edges_per_model",
          "type": "std::unordered_map<std::string, std::list<std::string>>",
          "documentation": "Contains the list of referenced models for a particular model name.\n"
        }
      ]
    },
    {
      "name": "transforms::reference_graph_data_transform",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::tagged_values_overrides_transform",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::provenance_transform",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "registrar",
      "stereotypes": [
        "masd::serialization::type_registrar"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "main",
      "stereotypes": [
        "masd::entry_point",
        "dogen::untypable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "CMakeLists",
      "stereotypes": [
        "masd::build::cmakelists",
        "dogen::handcrafted::cmake"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "entities::comment",
      "documentation": "Represents a comment block as read out from the codec representation.\n",
      "stereotypes": [
        "Documentable",
        "Taggable"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "applies_to_container",
          "type": "bool",
          "documentation": "Content of the field as it belonged to the containing object.\n"
        },
        {
          "name": "original_content",
          "type": "std::string",
          "documentation": "Content, as read from the codec representation.\n"
        }
      ]
    },
    {
      "name": "entities::object",
      "documentation": "Represents an \"raw\" codec object which may or may not contain a modeling element of interest.\n",
      "stereotypes": [
        "Commentable"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "id",
          "type": "std::string",
          "documentation": "Original ID available in the codec representation, if any.\n"
        },
        {
          "name": "name",
          "type": "std::string",
          "documentation": "Original name in codec representation. May be qualified or simple; its nature is codec dependent.\n"
        },
        {
          "name": "object_type",
          "type": "std::string",
          "documentation": "Native codec representation for the object type. Its interpretation is codec dependent.\n"
        },
        {
          "name": "stereotypes",
          "type": "std::string",
          "documentation": "Original steoreotypes assigned to the object, if any.\n"
        },
        {
          "name": "container_id",
          "type": "std::string",
          "documentation": "Codec ID of the container of this object, if any.\n"
        },
        {
          "name": "connection",
          "type": "boost::optional<std::pair<std::string,std::string>>",
          "documentation": "Connections this object may have with other objects, if any.\n"
        },
        {
          "name": "attributes",
          "type": "std::list<attribute>",
          "documentation": "All attributes associated with this object.\n"
        }
      ]
    },
    {
      "name": "entities::artefact",
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "path",
          "type": "boost::filesystem::path",
          "documentation": "Path to the file representing this artefact, if any.\n"
        },
        {
          "name": "codec_name",
          "type": "std::string",
          "documentation": "Name of the codec to process this artefact.\n"
        },
        {
          "name": "content",
          "type": "std::string",
          "documentation": "Contents of the artefact.\n"
        }
      ]
    },
    {
      "name": "transforms::file_to_artefact_transform",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::json_artefact_to_model_transform",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::model_to_json_artefact_transform",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::dia_artefact_to_model_transform",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::org_artefact_to_model_transform",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::model_to_org_artefact_transform",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::artefact_to_file_transform",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::artefact_to_model_chain",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "transforms::model_to_artefact_chain",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "features::meta_data",
      "documentation": "Assorted meta-data.\n",
      "stereotypes": [
        "masd::variability::feature_bundle"
      ],
      "tagged_values": {
        "masd.variability.default_binding_point": "any",
        "masd.variability.key_prefix": "masd.codec"
      },
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "stereotypes",
          "type": "masd::variability::comma_separated",
          "documentation": "Stereotypes associated with this element or attribute.\n",
          "tagged_values": {
            "masd.variability.is_optional": "true"
          }
        },
        {
          "name": "type",
          "type": "masd::variability::text",
          "documentation": "Type associated with this attribute.\n",
          "tagged_values": {
            "masd.variability.is_optional": "true"
          }
        },
        {
          "name": "value",
          "type": "masd::variability::text",
          "documentation": "Value associated with this attribute.\n",
          "tagged_values": {
            "masd.variability.is_optional": "true"
          }
        },
        {
          "name": "parent",
          "type": "masd::variability::comma_separated",
          "documentation": "Parent associated with this element.\n",
          "tagged_values": {
            "masd.variability.is_optional": "true"
          }
        },
        {
          "name": "can_be_primitive_underlier",
          "type": "masd::variability::boolean",
          "tagged_values": {
            "masd.variability.is_optional": "true"
          }
        },
        {
          "name": "in_global_module",
          "type": "masd::variability::boolean",
          "tagged_values": {
            "masd.variability.is_optional": "true"
          }
        },
        {
          "name": "can_be_enumeration_underlier",
          "type": "masd::variability::boolean",
          "tagged_values": {
            "masd.variability.is_optional": "true"
          }
        },
        {
          "name": "is_default_enumeration_type",
          "type": "masd::variability::boolean",
          "tagged_values": {
            "masd.variability.is_optional": "true"
          }
        },
        {
          "name": "is_associative_container",
          "type": "masd::variability::boolean",
          "tagged_values": {
            "masd.variability.is_optional": "true"
          }
        },
        {
          "name": "is_floating_point",
          "type": "masd::variability::boolean",
          "tagged_values": {
            "masd.variability.is_optional": "true"
          }
        }
      ]
    },
    {
      "name": "transforms::meta_data_transform",
      "stereotypes": [
        "dogen::handcrafted::typeable"
      ],
      "fallback_element_type": "masd::object"
    }
  ]
}
