#+title: dogen.openapi
#+options: <:nil c:nil todo:nil ^:nil d:nil date:nil author:nil
#+tags: { element(e) attribute(a) module(m) }
* document                                                          :element:
  :PROPERTIES:
  :custom_id: O0
  :END:
** openapi                                                        :attribute:
   :PROPERTIES:
   :masd.codec.type: std::string
   :END:

The semantic version number of the OpenAPI Specification version that the OpenAPI document uses.

** info                                                           :attribute:
   :PROPERTIES:
   :masd.codec.type: info
   :END:

Provides metadata about the API.

** servers                                                        :attribute:
   :PROPERTIES:
   :masd.codec.type: std::list<server>
   :END:

An array of Server Objects, which provide connectivity information to a target server.

** paths                                                          :attribute:
   :PROPERTIES:
   :masd.codec.type: paths
   :END:

The available paths and operations for the API.

** components                                                     :attribute:
   :PROPERTIES:
   :masd.codec.type: components
   :END:

An element to hold various schemas for the specification.

** security                                                       :attribute:
   :PROPERTIES:
   :masd.codec.type: security_requirements
   :END:

A declaration of which security mechanisms can be used across the API.

** tags                                                           :attribute:
   :PROPERTIES:
   :masd.codec.type: tags
   :END:

A list of tags used by the specification with additional metadata.

** external docs                                                  :attribute:
   :PROPERTIES:
   :masd.codec.type: external_documentation
   :END:

Additional external documentation.

* info                                                              :element:
  :PROPERTIES:
  :custom_id: O1
  :END:
** title                                                          :attribute:
   :PROPERTIES:
   :masd.codec.type: std::string
   :END:

The title of the application.

** description                                                    :attribute:
   :PROPERTIES:
   :masd.codec.type: std::string
   :END:

A short description of the application. CommonMark syntax may be used for rich text representation.

** terms of service                                               :attribute:
   :PROPERTIES:
   :masd.codec.type: std::string
   :END:

A URL to the Terms of Service for the API.

** contact                                                        :attribute:
   :PROPERTIES:
   :masd.codec.type: contact
   :END:

The contact information for the exposed API.

** license                                                        :attribute:
   :PROPERTIES:
   :masd.codec.type: license
   :END:

The license information for the exposed API.

** version                                                        :attribute:
   :PROPERTIES:
   :masd.codec.type: std::string
   :END:

The version of the OpenAPI document itself.

* server                                                            :element:
  :PROPERTIES:
  :custom_id: O2
  :END:
** url                                                            :attribute:
   :PROPERTIES:
   :masd.codec.type: std::string
   :END:

A URL to the target host.

** description                                                    :attribute:
   :PROPERTIES:
   :masd.codec.type: std::string
   :END:

An optional string describing the host designated by the URL.

** variables                                                      :attribute:
   :PROPERTIES:
   :masd.codec.type: std::unordered_map<std::string, server_variable>
   :END:

A map between a variable name and its value. The value is used for substitution in the server's URL template.

* paths                                                             :element:
  :PROPERTIES:
  :custom_id: O3
  :END:
* components                                                        :element:
  :PROPERTIES:
  :custom_id: O4
  :END:
** schemas                                                        :attribute:
   :PROPERTIES:
   :masd.codec.type: std::unordered_map<std::string, schema>
   :END:

An object to hold reusable schema objects.

** responses                                                      :attribute:
   :PROPERTIES:
   :masd.codec.type: std::unordered_map<std::string, response>
   :END:

An object to hold reusable response objects.

** parameters                                                     :attribute:
   :PROPERTIES:
   :masd.codec.type: std::unordered_map<std::string, parameter>
   :END:

An object to hold reusable parameter objects.

** examples                                                       :attribute:
   :PROPERTIES:
   :masd.codec.type: std::unordered_map<std::string, example>
   :END:

An object to hold reusable examples objects.

** request bodies                                                 :attribute:
   :PROPERTIES:
   :masd.codec.type: std::unordered_map<std::string, request_body>
   :END:

An object to hold reusable request bodies objects.

** headers                                                        :attribute:
   :PROPERTIES:
   :masd.codec.type: std::unordered_map<std::string, request_header>
   :END:

An object to hold reusable header objects.

** security schemes                                               :attribute:
   :PROPERTIES:
   :masd.codec.type: std::unordered_map<std::string, security_scheme>
   :END:

An object to hold reusable security scheme objects.

** links                                                          :attribute:
   :PROPERTIES:
   :masd.codec.type: std::unordered_map<std::string, link>
   :END:

An object to hold reusable links objects.

** callbacks                                                      :attribute:
   :PROPERTIES:
   :masd.codec.type: std::unordered_map<std::string, callback>
   :END:

An object to hold reusable callbacks objects.

* security requirements                                             :element:
  :PROPERTIES:
  :custom_id: O5
  :END:
* tags                                                              :element:
  :PROPERTIES:
  :custom_id: O6
  :END:
* externalDocs                                                      :element:
  :PROPERTIES:
  :custom_id: O7
  :END:
* external documentation                                            :element:
  :PROPERTIES:
  :custom_id: O8
  :END:
* contact                                                           :element:
  :PROPERTIES:
  :custom_id: O10
  :END:
** name                                                           :attribute:
   :PROPERTIES:
   :masd.codec.type: std::string
   :END:

The identifying name of the contact person/organization.

** url                                                            :attribute:
   :PROPERTIES:
   :masd.codec.type: std::string
   :END:

The URL pointing to the contact information.

** email                                                          :attribute:
   :PROPERTIES:
   :masd.codec.type: std::string
   :END:

The email address of the contact person/organization.

* licence                                                           :element:
  :PROPERTIES:
  :custom_id: O12
  :END:
** name                                                           :attribute:
   :PROPERTIES:
   :masd.codec.type: std::string
   :END:

The license name used for the API.

** url                                                            :attribute:
   :PROPERTIES:
   :masd.codec.type: std::string
   :END:

A URL to the license used for the API.

* server variable                                                   :element:
  :PROPERTIES:
  :custom_id: O15
  :END:
** enumeration                                                    :attribute:
   :PROPERTIES:
   :masd.codec.type: std::list<std::string>
   :END:

An enumeration of string values to be used if the substitution options are from a limited set.

** default value                                                  :attribute:
   :PROPERTIES:
   :masd.codec.type: std::string
   :END:

The default value to use for substitution.

** description                                                    :attribute:
   :PROPERTIES:
   :masd.codec.type: std::string
   :END:

An optional description for the server variable.

* schema                                                            :element:
  :PROPERTIES:
  :custom_id: O17
  :END:
