#+title: Sprint Backlog 48
#+options: date:nil toc:nil author:nil num:nil
#+todo: ANALYSIS IMPLEMENTATION TESTING | COMPLETED CANCELLED
#+tags: story(s) epic(e) task(t) note(n) spike(p)

* Stories

This file contains all stories that were closed during sprint 48.

The *Mission Statement* for this sprint is to try to get development
back up and running. We have stalled over the last few sprints.

** Development Stories Implemented

#+begin: clocktable :maxlevel 3 :scope subtree
Clock summary at [2014-05-27 Tue 13:07]

| Headline                                                   | Time    |       |      |
|------------------------------------------------------------+---------+-------+------|
| *Total time*                                               | *18:21* |       |      |
|------------------------------------------------------------+---------+-------+------|
| Development Stories Implemented                            |         | 18:21 |      |
| COMPLETED Sprint and product backlog grooming              |         |       | 0:51 |
| COMPLETED Updates to the manual and readme files           |         |       | 2:07 |
| COMPLETED Log start and finish of dogen with version       |         |       | 0:20 |
| COMPLETED Install packages into =/usr=                     |         |       | 2:23 |
| COMPLETED Fix issues with database tests                   |         |       | 2:54 |
| COMPLETED Rename =driver= to =knitter=                     |         |       | 1:25 |
| COMPLETED Rename =engine= to =knit=                        |         |       | 0:26 |
| COMPLETED Sprint number is not being added to the version  |         |       | 0:06 |
| COMPLETED Remove =--info= option from command line         |         |       | 0:04 |
| COMPLETED Knitter: Only log if logger has been initialised |         |       | 1:02 |
| COMPLETED XML reader does not log exceptions to file       |         |       | 1:12 |
| COMPLETED Usage of =formatters= model in =cpp_formatters=  |         |       | 5:14 |
| COMPLETED Remove generic interfaces in =formatters=        |         |       | 0:17 |
#+end:

*** COMPLETED Sprint and product backlog grooming                      :task:
    CLOSED: [2014-05-05 Mon 07:59]
    CLOCK: [2014-05-04 Sun 12:50]--[2014-05-04 Sun 13:21] =>  0:31
    CLOCK: [2014-04-30 Wed 08:30]--[2014-04-30 Wed 08:32] =>  0:02
    CLOCK: [2014-04-28 Mon 18:31]--[2014-04-28 Mon 18:37] =>  0:06
    CLOCK: [2014-04-28 Mon 08:28]--[2014-04-28 Mon 08:30] =>  0:02
    CLOCK: [2014-04-19 Sat 23:25]--[2014-04-19 Sat 23:35] =>  0:10

Updates to sprint and product backlog.

*** COMPLETED Updates to the manual and readme files                   :task:
    CLOSED: [2014-05-05 Mon 07:59]
    CLOCK: [2014-04-30 Wed 07:52]--[2014-04-30 Wed 08:30] =>  0:38
    CLOCK: [2014-04-29 Tue 21:45]--[2014-04-29 Tue 23:02] =>  1:17
    CLOCK: [2014-04-29 Tue 18:32]--[2014-04-29 Tue 18:44] =>  0:12

Use build downtime to update the manual and / or readme file.

*** COMPLETED Log start and finish of dogen with version              :story:
    CLOSED: [2014-04-28 Mon 16:33]
    CLOCK: [2014-04-28 Mon 18:21]--[2014-04-28 Mon 18:31] =>  0:10
    CLOCK: [2014-04-28 Mon 08:30]--[2014-04-28 Mon 08:40] =>  0:10

The log file of a non-verbose session of dogen provides no information
whatsoever about the version of dogen, git commit, etc.

: 2014-03-12 18:25:09.053599 [INFO] [engine.workflow] Workflow started.
: ...
: 2014-03-12 18:25:09.252724 [INFO] [engine.workflow] Workflow finished.

*** COMPLETED Install packages into =/usr=                            :story:
    CLOSED: [2014-04-27 Sun 15:29]
    CLOCK: [2014-04-27 Sun 13:06]--[2014-04-27 Sun 15:29] =>  2:23

As we will be using Docker to test the packages, we can now write
files into =/usr/bin= without fear. Move from =/opt= into =/usr=.

*** COMPLETED Remove versioning from packages                         :story:
    CLOSED: [2014-04-27 Sun 15:30]

We don't seem to have a particularly good story around versioning in
packages. It's best to remove it for now until we really understand
how it should work.

In addition, we will be using Docker to test the packages, making
versioning less of a necessity.

*** COMPLETED Fix issues with database tests                          :story:
    CLOSED: [2014-04-28 Mon 16:32]

Last sprint we solved the delays in nightlies by adding concurrency to
the tests; however, that broke the database tests. We need to refactor
the tests to allow them to run concurrently.

**** COMPLETED Setup erdos to run database tests                       :task:
     CLOSED: [2014-04-28 Mon 16:32]
     CLOCK: [2014-04-28 Mon 07:52]--[2014-04-28 Mon 08:28] =>  0:36
     CLOCK: [2014-04-22 Tue 07:53]--[2014-04-22 Tue 08:15] =>  0:22

Erdos is not using the PFH and as such cannot see the ODB install, so
the tests are not setup to run there. We need to create a local
directory with ODB (and EOS while we're at it), setup the =pgpass=
file and get the tests to run successfully.

**** COMPLETED Setup lorenz to run database tests                      :task:
     CLOSED: [2014-04-27 Sun 12:32]

After reinstall we lost the PFH so setup a minimal personal directory
with ODB and EOS.

**** COMPLETED Investigate errors in tests                             :task:
     CLOSED: [2014-04-27 Sun 12:31]
     CLOCK: [2014-04-27 Sun 10:35]--[2014-04-27 Sun 12:31] =>  1:56

We seem to have traffic-lighters in the database tests when executing
them concurrently. Somewhere they must be trampling on each others
feet.

*** COMPLETED Rename =driver= to =knitter=                            :story:
    CLOSED: [2014-04-29 Tue 18:39]
    CLOCK: [2014-04-29 Tue 18:08]--[2014-04-29 Tue 18:32] =>  0:24
    CLOCK: [2014-04-29 Tue 08:09]--[2014-04-29 Tue 08:48] =>  0:39
    CLOCK: [2014-04-28 Mon 18:38]--[2014-04-28 Mon 19:00] =>  0:22

As part of the naming epic "Naming of libraries and binaries", rename
driver. We should also get rid of the =dogen= shell script. Finally we
need to add some blurb to the manual to mention the whole "weaving"
theme and update the command line documentation.

*** COMPLETED Rename =engine= to =knit=                               :story:
    CLOSED: [2014-04-29 Tue 18:39]
    CLOCK: [2014-04-28 Mon 23:12]--[2014-04-28 Mon 23:38] =>  0:26

As part of the naming epic "Naming of libraries and binaries", rename
engine.

*** COMPLETED Sprint number is not being added to the version         :story:
    CLOSED: [2014-04-30 Wed 08:38]
    CLOCK: [2014-04-30 Wed 08:32]--[2014-04-30 Wed 08:38] =>  0:06

The dogen version at present is:

: $ ./dogen_knitter --version
: dogen v0.0.2233
: Copyright (C) 2012 Kitanda.
: License: GPLv3 - GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.

It should be v.0.SPRINT_NUMBER.2233 to reflect the tags, where
SPRINT_NUMBER is the current sprint.

Also, we should probably consider removing the leading 0, as we do not
have a good policy to manage it.

*** COMPLETED Remove =--info= option from command line                :story:
    CLOSED: [2014-04-30 Wed 08:42]
    CLOCK: [2014-04-30 Wed 08:38]--[2014-04-30 Wed 08:42] =>  0:04

In the help text we make reference to an =--info= option:

: General options:
:  -h [ --help ]         Display this help and exit.
:  --version             Output version information and exit.
:  --info                Lists available backends.
: ...

However, running it does not work:

: $ ./dogen_knitter --info
: [2014-03-11 18:22:21.362328] [0x0b6ffc70] [info]    Mandatory parameter target is missing. Try `dogen --help' for more information.
: [2014-03-11 18:22:21.365440] [0x0b6ffc70] [info]    /home/marco/Development/DomainDrivenConsulting/dogen/projects/knitter/src/program_options_parser.cpp(364): Throw in function void dogen::knitter::program_options_parser::throw_missing_target() const
: Dynamic exception type: N5boost16exception_detail10clone_implIN5dogen6knitter23parser_validation_errorEEE
: std::exception::what: Mandatory parameter target is missing. Try `dogen --help' for more information.
:
: Mandatory parameter target is missing. Try `dogen --help' for more information.

This option is not particularly useful for now anyway as we will only
support C++ for the foreseeable future.

*** COMPLETED Consider catching boost exception instead of casting    :story:
    CLOSED: [2014-04-30 Wed 22:01]

In =knitter= we are catching =std::exception= and then casting it to
=boost::exception=. Seems cleaner to have an additional catch specific
to =boost::exception=.

This was considered but cannot be done. The reason why is
=boost::exception= does not have a =what()= method and so its not
possible to output a user-friendly message to the console. A comment
was added to avoid confusion in the future.

*** COMPLETED Knitter: Only log if logger has been initialised        :story:
    CLOSED: [2014-05-01 Thu 08:15]
    CLOCK: [2014-05-01 Thu 07:53]--[2014-05-01 Thu 08:13] =>  0:20
    CLOCK: [2014-04-30 Wed 18:26]--[2014-04-30 Wed 19:08] =>  0:42

At the moment we are logging when there exceptions before the logger
has been initialised. This results in a lot of stuff spewed into the
console:

: [2014-04-30 18:32:37.731027] [0x0b707a70] [info]    unrecognised option '--info'
: [2014-04-30 18:32:37.731746] [0x0b707a70] [info]    /home/marco/Development/DomainDrivenConsulting/dogen/projects/knitter/src/program_options_parser.cpp(309): Throw in function boost::optional<boost::program_options::variables_map> dogen::knitter::program_options_parser::variables_map_factory() const
: Dynamic exception type: N5boost16exception_detail10clone_implIN5dogen7knitter23parser_validation_errorEEE
: std::exception::what: unrecognised option '--info'
: unrecognised option '--info'
: [2014-04-30 18:32:37.731857] [0x0b707a70] [info]    Dogen Knitter v0.48.2303 finished with errors.

We should check to see if logging was initialised before logging.

*** COMPLETED XML reader does not log exceptions to file              :story:
    CLOSED: [2014-05-01 Thu 22:58]
    CLOCK: [2014-05-01 Thu 22:05]--[2014-05-01 Thu 22:58] =>  0:53
    CLOCK: [2014-05-01 Thu 08:23]--[2014-05-01 Thu 08:42] =>  0:19

We are throwing exceptions but not logging them to file.

*** COMPLETED Usage of =formatters= model in =cpp_formatters=         :story:
    CLOSED: [2014-05-05 Mon 07:58]
    CLOCK: [2014-05-04 Sun 19:10]--[2014-05-04 Sun 20:11] =>  1:01
    CLOCK: [2014-05-04 Sun 13:21]--[2014-05-04 Sun 14:10] =>  0:49
    CLOCK: [2014-05-04 Sun 14:10]--[2014-05-04 Sun 15:28] =>  1:18
    CLOCK: [2014-05-04 Sun 20:59]--[2014-05-04 Sun 22:56] =>  1:57
    CLOCK: [2014-05-04 Sun 20:31]--[2014-05-04 Sun 20:38] =>  0:07
    CLOCK: [2014-05-04 Sun 20:29]--[2014-05-04 Sun 20:31] =>  0:02

This is an analysis story.

We did a lot of work to split the language-agnostic formatters from
the c++ formatters but we never hooked the new code. We need to do so
in order to start using the shinny boilerplate formatters, etc.

After some analysis, it seems =formatters= is a bit too generic, in
particular the =workflow=, =file_formatter_interface= and
=transformer_interface=. These seemed like a good idea at the time,
but with the implementation is looking worse by the minute:

- we need to cast the =formatters= entities to figure out if it
  applies to the current formatter. In reality, if we kept the
  formatters with their entities, this would not be required.
- we need to =visit= the entity to resolve it to a type; this then
  means we can't have a simple method that returns a file, but instead
  we need to store the state in a member variable. When time comes to
  introduce threads, this will make life much harder.
- we introduce a lot of indirection: registration, interfaces,
  dispatch and double-dispatch. This can't be good for performance.
- the entire rationale for this approach was to make the creation of
  formatters trivial (e.g. just register the formatter and away we
  go). Whilst this is achieved, the remainder of the code base will
  become a lot less understandable. The engineering trade-off doesn't
  appear to be a good one.

In conclusion, creating a generic =formatters= model was a good idea,
but having a common workflow for all specific formatter models
(e.g. =cpp_formatters=) was a step too far. What we really want is a
simple, very static =cpp_formatters= workflow that makes use of
=formatters= where required.

*** COMPLETED Remove generic interfaces in =formatters=               :task:
     CLOSED: [2014-05-04 Sun 20:28]
     CLOCK: [2014-05-04 Sun 20:11]--[2014-05-04 Sun 20:28] =>  0:17

Just bin this code and associated tests.

** Deprecated Development Stories
